#!/usr/bin/ruby

# btrfs_total -- a munin plugin.
# <chrisjohntapp@gmail.com>

require 'ptools'
require 'sys-filesystem'
include Sys

class BtrfsVolume
  attr_accessor :name

  attr_reader :device_size
  # attr_reader :device_allocated
  # attr_reader :device_unallocated
  # attr_reader :used
  attr_reader :estimated_free
  attr_reader :minimum_free

  def initialize(name, block)
    @name                = name
    @device_size         = /Device size.*\s(\d+)/.match(block)[1]
    # @device_allocated    = /Device allocated.*\s(\d+)/.match(block)[1]
    # @device_unallocated  = /Device unallocated.*\s(\d+)/.match(block)[1]
    # @used                = /Used.*\s(\d+)/.match(block)[1]
    @estimated_free      = /estimated.*\s(\d+)\s.*/.match(block)[1]
    @minimum_free        = /min.*\s(\d+)/.match(block)[1]
  end
end

btrfs_bin = File.which('btrfs')
getBtrfsInfo = "#{btrfs_bin} filesystem usage -b"

btrfs_vols = Array.new
Filesystem.mounts {|m|
  if m.mount_type == 'btrfs'
    btrfs_vols.push(BtrfsVolume.new(m.mount_point, `#{getBtrfsInfo} #{m.mount_point}`))
  end
}

if ARGV[0] == 'config'
  puts "graph_title Btrfs disk space used in percent"
  puts "graph_vlabel %"
  puts "graph_category disk"
  btrfs_vols.each { |v|
    puts v.name + '_estimated_used.label ' + v.name + '_estimated_used'
    puts v.name + '_maximum_used.label ' + v.name + '_maximum_used'
  }
  exit 0
end

btrfs_vols.each { |v|
  estimated_used_pc = 100 - ((v.estimated_free.to_f / v.device_size.to_f) * 100).round(2)
  maximum_used_pc = 100 -((v.minimum_free.to_f / v.device_size.to_f) * 100).round(2)

  puts v.name + '_estimated_used' + '.value ' + estimated_used_pc.to_s
  puts v.name + '_maximum_used' + '.value ' + maximum_used_pc.to_s
}
